<Window x:Class="DammyApp1.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DammyApp1"
        xmlns:viewmodel="clr-namespace:DammyApp1.MVVM.ViewModel"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">

    <Window.Resources>
        <viewmodel:MainWindowViewModel x:Key="MyDataSource"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="60" />
            <RowDefinition Height="100" />
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <TextBox Grid.Row="0"  Height="40" Width="400" Text="{Binding InputText, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
        <!--<DataGrid Grid.Row="1" AutoGenerateColumns="False" ItemsSource="{Binding  StudentList}"  CanUserAddRows="False" CanUserResizeColumns="True" CanUserSortColumns="False" IsReadOnly="True" >
            <DataGrid.Columns>
                <DataGridTextColumn Header="ID" Binding="{Binding Id}" />
                <DataGridTextColumn Header="First Name"  Binding="{Binding FirstName}"/>
                <DataGridTextColumn Header="Last Name"  Binding="{Binding LastName}"/>
                <DataGridTextColumn Header="Gender"  Binding="{Binding Gender}"/>
                <DataGridTextColumn Header="Percentage"  Binding="{Binding Percentage}"/>
            </DataGrid.Columns>
        </DataGrid>-->

        <StackPanel Grid.Row="1">
            <TextBlock x:Name="naveenBlock" Text="{Binding TeacherDetails.Name, UpdateSourceTrigger=PropertyChanged}"/>
            <TextBlock Text="{Binding TeacherDetails.Class, UpdateSourceTrigger=PropertyChanged}"/>
            <TextBlock Text="{Binding TeacherDetails.Division, UpdateSourceTrigger=PropertyChanged}"/>
        </StackPanel>
        
        <!--I Intraction is used to trigger Text changed Event and 
        Command binding is done along with 
        imp: command parameter has name and path both are importent
        ex1:element name will pic up the element which name is NaveenBlock or any name which diclared with x:Name=""
        ex2:path will tell different values like Text or Height or Width etc. for multiple Command parameter use Link belo
        https://stackoverflow.com/questions/1350598/passing-two-command-parameters-using-a-wpf-binding-->
        
        <!--add two view models in a single View follow Below link
        https://learn.microsoft.com/en-us/answers/questions/273744/how-to-assosiate-two-viewmodels-with-single-view-i-->
        
        <StackPanel Grid.Row="2">
            <TextBox x:Name="TextBox1" Text="{Binding Text1, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction Command="{Binding TextChangedCommand}" CommandParameter="{Binding ElementName=naveenBlock, Path=Text}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <TextBox Text="{Binding Text2, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"></TextBox>
            <TextBox Text="{Binding Text3, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"></TextBox>
        
        
        
        
        </StackPanel>
        
        

    </Grid>
</Window>
